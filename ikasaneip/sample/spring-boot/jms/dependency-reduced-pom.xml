<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>sample-spring-boot-parent</artifactId>
    <groupId>org.ikasan</groupId>
    <version>2.0.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.ikasan</groupId>
  <artifactId>sample-spring-boot-jms</artifactId>
  <version>2.0.0-SNAPSHOT</version>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <artifactSet>
                <includes>
                  <include>org.ikasan:ikasan-webconsole-boot-war</include>
                </includes>
              </artifactSet>
              <filters>
                <filter>
                  <artifact>org.ikasan:ikasan-webconsole-boot-war</artifact>
                  <includes>
                    <include>css/**</include>
                    <include>images/**</include>
                    <include>js/**</include>
                    <include>login/**</include>
                    <include>WEB-INF/**</include>
                  </includes>
                </filter>
              </filters>
              <relocations>
                <relocation>
                  <pattern>css</pattern>
                  <shadedPattern>META-INF/resources/css</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>images</pattern>
                  <shadedPattern>META-INF/resources/images</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>js</pattern>
                  <shadedPattern>META-INF/resources/js</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>WEB-INF</pattern>
                  <shadedPattern>META-INF/resources/WEB-INF</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>login</pattern>
                  <shadedPattern>META-INF/resources</shadedPattern>
                </relocation>
              </relocations>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${version.org.springboot}</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.4.13</version>
        <executions>
          <execution>
            <id>build-image</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <imageName>${team.name}/${artifact.shortname}:latest</imageName>
          <dockerDirectory>${project.build.directory}/docker</dockerDirectory>
          <useConfigFile>true</useConfigFile>
          <pushImage>${docker.push.image}</pushImage>
          <imageTags>
            <imageTag>${project.version}</imageTag>
          </imageTags>
          <resources>
            <resource>
              <filtering>false</filtering>
              <targetPath>/</targetPath>
              <directory>${project.build.directory}</directory>
              <include>${project.build.finalName}.jar</include>
            </resource>
          </resources>
          <skipDockerBuild>false</skipDockerBuild>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.0.2</version>
        <executions>
          <execution>
            <id>copy-docker</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>docker</directory>
                  <targetPath>docker</targetPath>
                  <filtering>true</filtering>
                  <includes>
                    <include>Dockerfile</include>
                    <include>init.sh</include>
                  </includes>
                </resource>
              </resources>
              <encoding>UTF-8</encoding>
              <delimiters>
                <delimiter>${*}</delimiter>
              </delimiters>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jta-narayana</artifactId>
      <version>1.4.1.RELEASE</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>1.4.1.RELEASE</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <version>1.4.1.RELEASE</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jms</artifactId>
      <version>4.3.3.RELEASE</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>4.3.3.RELEASE</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.ikasan</groupId>
      <artifactId>ikasan-eip</artifactId>
      <version>2.0.0-SNAPSHOT</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-jdk14</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>geronimo-spec-j2ee</artifactId>
          <groupId>geronimo-spec</groupId>
        </exclusion>
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.ikasan</groupId>
      <artifactId>ikasan-jms-spring</artifactId>
      <version>2.0.0-SNAPSHOT</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>geronimo-spec-j2ee</artifactId>
          <groupId>geronimo-spec</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.ikasan</groupId>
      <artifactId>ikasan-topology</artifactId>
      <version>2.0.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.ikasan</groupId>
      <artifactId>ikasan-rest-boot</artifactId>
      <version>2.0.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.ikasan</groupId>
      <artifactId>ikasan-builder-spring</artifactId>
      <version>2.0.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.ikasan</groupId>
      <artifactId>ikasan-builder</artifactId>
      <version>2.0.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.ikasan</groupId>
      <artifactId>ikasan-monitor</artifactId>
      <version>2.0.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.ikasan</groupId>
      <artifactId>ikasan-replay</artifactId>
      <version>2.0.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>4.3.2.Final</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>4.3.9.Final</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.ikasan</groupId>
      <artifactId>ikasan-webconsole-jar</artifactId>
      <version>2.0.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
      <version>8.5.5</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.hornetq</groupId>
      <artifactId>hornetq-jms-client</artifactId>
      <version>2.3.12.Final</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss</groupId>
      <artifactId>jboss-remote-naming</artifactId>
      <version>1.0.8.Final</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.xnio</groupId>
      <artifactId>xnio-nio</artifactId>
      <version>3.0.10.GA</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.xnio</groupId>
      <artifactId>xnio-api</artifactId>
      <version>3.0.10.GA</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.178</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.6</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${version.org.springboot}</version>
        <type>pom</type>
        <scope>import</scope>
        <exclusions>
          <exclusion>
            <artifactId>logback-classic</artifactId>
            <groupId>ch.qos.logback</groupId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <properties>
    <docker.push.image>false</docker.push.image>
    <project.exec.artifactId>${project.build.finalName}</project.exec.artifactId>
    <artifact.shortname>springboot-service</artifact.shortname>
    <version.org.apache.tomcat>8.5.5</version.org.apache.tomcat>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <team.name>ikasan</team.name>
  </properties>
</project>

